function PieceGenerator.new 0
    push constant 5
    call Memory.alloc 1
    pop pointer 0
    push constant 1
    neg
    pop this 0
    push constant 1
    neg
    pop this 1
    push constant 197
    pop this 2
    push constant 1
    neg
    pop this 3
    push constant 0
    pop this 4
    push this 2
    push constant 17
    call Math.multiply 2
    push constant 29
    add
    push constant 255
    and
    pop this 2
    push pointer 0
    call PieceGenerator.generateNextPieceType 1
    pop temp 0
    push pointer 0
    return
function PieceGenerator.getNextInSequence 3
    push argument 0
    pop pointer 0
    push this 4
    push constant 7
    call Math.divide 2
    pop local 0
    push this 4
    push local 0
    push constant 7
    call Math.multiply 2
    sub
    pop local 1
    push local 0
    push constant 1
    and
    push constant 0
    eq
    not
    if-goto PieceGenerator_0
    push local 1
    pop local 2
    goto PieceGenerator_1
label PieceGenerator_0
    push constant 6
    push local 1
    sub
    pop local 2
label PieceGenerator_1
    push local 2
    push this 2
    push constant 3
    and
    add
    pop local 2
label PieceGenerator_2
    push local 2
    push constant 6
    gt
    not
    if-goto PieceGenerator_3
    push local 2
    push constant 7
    sub
    pop local 2
    goto PieceGenerator_2
label PieceGenerator_3
    push this 4
    push constant 1
    add
    pop this 4
    push local 2
    return
function PieceGenerator.generateNextPieceType 3
    push argument 0
    pop pointer 0
    push constant 0
    pop local 0
    push constant 0
    pop local 2
label PieceGenerator_4
    push local 2
    not
    push local 0
    push constant 15
    lt
    and
    not
    if-goto PieceGenerator_5
    push pointer 0
    call PieceGenerator.getNextInSequence 1
    pop local 1
    push local 1
    push this 0
    eq
    push this 0
    push this 1
    eq
    and
    not
    if-goto PieceGenerator_6
    push local 0
    push constant 1
    add
    pop local 0
    push this 2
    push constant 17
    add
    pop this 2
    goto PieceGenerator_7
label PieceGenerator_6
    push local 1
    pop this 3
    push constant 1
    neg
    pop local 2
label PieceGenerator_7
    goto PieceGenerator_4
label PieceGenerator_5
    push local 2
    not
    not
    if-goto PieceGenerator_8
    push this 0
    push constant 1
    add
    pop this 3
    push this 3
    push constant 6
    gt
    not
    if-goto PieceGenerator_10
    push constant 0
    pop this 3
    goto PieceGenerator_11
label PieceGenerator_10
label PieceGenerator_11
    goto PieceGenerator_9
label PieceGenerator_8
label PieceGenerator_9
    push constant 0
    return
function PieceGenerator.getNextPieceType 0
    push argument 0
    pop pointer 0
    push this 3
    return
function PieceGenerator.getStartX 0
    push argument 0
    pop pointer 0
    push argument 1
    push constant 0
    eq
    not
    if-goto PieceGenerator_12
    push constant 3
    return
    goto PieceGenerator_13
label PieceGenerator_12
label PieceGenerator_13
    push argument 1
    push constant 1
    eq
    not
    if-goto PieceGenerator_14
    push constant 4
    return
    goto PieceGenerator_15
label PieceGenerator_14
label PieceGenerator_15
    push argument 1
    push constant 2
    eq
    not
    if-goto PieceGenerator_16
    push constant 3
    return
    goto PieceGenerator_17
label PieceGenerator_16
label PieceGenerator_17
    push argument 1
    push constant 3
    eq
    not
    if-goto PieceGenerator_18
    push constant 3
    return
    goto PieceGenerator_19
label PieceGenerator_18
label PieceGenerator_19
    push argument 1
    push constant 4
    eq
    not
    if-goto PieceGenerator_20
    push constant 3
    return
    goto PieceGenerator_21
label PieceGenerator_20
label PieceGenerator_21
    push argument 1
    push constant 5
    eq
    not
    if-goto PieceGenerator_22
    push constant 3
    return
    goto PieceGenerator_23
label PieceGenerator_22
label PieceGenerator_23
    push argument 1
    push constant 6
    eq
    not
    if-goto PieceGenerator_24
    push constant 3
    return
    goto PieceGenerator_25
label PieceGenerator_24
label PieceGenerator_25
    push constant 3
    return
function PieceGenerator.generateNewPiece 3
    push argument 0
    pop pointer 0
    push this 3
    pop local 0
    push this 0
    pop this 1
    push local 0
    pop this 0
    push this 2
    push constant 3
    call Math.multiply 2
    push argument 3
    add
    push constant 13
    add
    push constant 255
    and
    pop this 2
    push pointer 0
    call PieceGenerator.generateNextPieceType 1
    pop temp 0
    push pointer 0
    push local 0
    call PieceGenerator.getStartX 2
    pop local 1
    push local 0
    push local 1
    push argument 2
    call Tetromino.new 3
    pop local 2
    push local 2
    return
function PieceGenerator.updateSeed 0
    push argument 0
    pop pointer 0
    push this 2
    push argument 1
    add
    push constant 255
    and
    pop this 2
    push constant 0
    return
function PieceGenerator.reset 0
    push argument 0
    pop pointer 0
    push constant 1
    neg
    pop this 0
    push constant 1
    neg
    pop this 1
    push constant 157
    pop this 2
    push constant 1
    neg
    pop this 3
    push constant 0
    pop this 4
    push this 2
    push constant 23
    call Math.multiply 2
    push constant 41
    add
    push constant 255
    and
    pop this 2
    push pointer 0
    call PieceGenerator.generateNextPieceType 1
    pop temp 0
    push constant 0
    return
function PieceGenerator.dispose 0
    push argument 0
    pop pointer 0
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return