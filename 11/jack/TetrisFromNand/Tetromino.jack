class Tetromino {
    field int pieceType;    // 0=I, 1=O, 2=T, 3=S, 4=Z, 5=J, 6=L
    field int x, y;         // Current position
    field int rotation;     // Rotation state (0-3)
    
    constructor Tetromino new(int type, int startX, int startY) {
        let pieceType = type;
        let x = startX;
        let y = startY;
        let rotation = 0;
        return this;
    }
    
    method int getType() {
        return pieceType;
    }
    
    method int getX() {
        return x;
    }
    
    method int getY() {
        return y;
    }
    
    method int getRotation() {
        return rotation;
    }
    
    method void setPosition(int newX, int newY) {
        let x = newX;
        let y = newY;
        return;
    }
    
    // 메모리 최적화를 위한 타입 설정 메서드 추가
    method void setType(int newType) {
        let pieceType = newType;
        return;
    }
    
    // 메모리 최적화를 위한 회전 설정 메서드 추가
    method void setRotation(int newRotation) {
        let rotation = newRotation;
        return;
    }
    
    // 완전한 상태 복사 메서드 (ghost piece 재사용용)
    method void copyFrom(Tetromino other) {
        if (~(other = 0)) {
            let pieceType = other.getType();
            let x = other.getX();
            let y = other.getY();
            let rotation = other.getRotation();
        }
        return;
    }
    
    method void moveLeft() {
        let x = x - 1;
        return;
    }
    
    method void moveRight() {
        let x = x + 1;
        return;
    }
    
    method void moveDown() {
        let y = y + 1;
        return;
    }
    
    method void rotate() {
        let rotation = rotation + 1;
        if (rotation > 3) {
            let rotation = 0;
        }
        return;
    }
    
    method void rotateReverse() {
        let rotation = rotation - 1;
        if (rotation < 0) {
            let rotation = 3;
        }
        return;
    }
    
    // I piece block X coordinate (horizontal/vertical)
    method int getIBlockX(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            return blockIndex;
        } else {
            return 1;
        }
    }
    
    // I piece block Y coordinate (horizontal/vertical)
    method int getIBlockY(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            return 0;
        } else {
            return blockIndex;
        }
    }
    
    // O piece block X coordinate (always 2x2 square)
    method int getOBlockX(int blockIndex) {
        if ((blockIndex = 0) | (blockIndex = 2)) { 
            return 0; 
        }
        return 1;
    }
    
    // O piece block Y coordinate (always 2x2 square)
    method int getOBlockY(int blockIndex) {
        if ((blockIndex = 0) | (blockIndex = 1)) { 
            return 0; 
        }
        return 1;
    }
    
    // T piece block X coordinate
    method int getTBlockX(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 1; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
        if (rotation = 1) {
            if (blockIndex = 0) { return 1; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 2; }
            return 1;
        }
        if (rotation = 2) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 2; }
            return 1;
        }
        // rotation = 3
        if (blockIndex = 0) { return 1; }
        if (blockIndex = 1) { return 0; }
        if (blockIndex = 2) { return 1; }
        return 1;
    }
    
    // T piece block Y coordinate
    method int getTBlockY(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 0; }
            return 1;
        }
        if (rotation = 1) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
        if (rotation = 2) {
            if (blockIndex = 3) { return 2; }
            return 1;
        }
        // rotation = 3
        if (blockIndex = 0) { return 0; }
        if (blockIndex = 1) { return 1; }
        if (blockIndex = 2) { return 1; }
        return 2;
    }
    
    // S piece block X coordinate
    method int getSBlockX(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            if (blockIndex = 0) { return 1; }
            if (blockIndex = 1) { return 2; }
            if (blockIndex = 2) { return 0; }
            return 1;
        } else {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 1;
        }
    }
    
    // S piece block Y coordinate
    method int getSBlockY(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            if ((blockIndex = 0) | (blockIndex = 1)) { return 0; }
            return 1;
        } else {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
    }
    
    // Z piece block X coordinate
    method int getZBlockX(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 1; }
            return 2;
        } else {
            if (blockIndex = 0) { return 1; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 0;
        }
    }
    
    // Z piece block Y coordinate
    method int getZBlockY(int blockIndex) {
        if ((rotation = 0) | (rotation = 2)) {
            if ((blockIndex = 0) | (blockIndex = 1)) { return 0; }
            return 1;
        } else {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
    }
    
    // J piece block X coordinate
    method int getJBlockX(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
        if (rotation = 1) {
            if (blockIndex = 0) { return 1; }
            if (blockIndex = 1) { return 2; }
            if (blockIndex = 2) { return 1; }
            return 1;
        }
        if (rotation = 2) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 2; }
            return 2;
        }
        // rotation = 3
        if (blockIndex = 0) { return 1; }
        if (blockIndex = 1) { return 1; }
        if (blockIndex = 2) { return 1; }
        return 0;
    }
    
    // J piece block Y coordinate
    method int getJBlockY(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 0; }
            return 1;
        }
        if (rotation = 1) {
            if ((blockIndex = 0) | (blockIndex = 1)) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
        if (rotation = 2) {
            if (blockIndex = 3) { return 1; }
            return 0;
        }
        // rotation = 3
        if (blockIndex = 0) { return 0; }
        if (blockIndex = 1) { return 1; }
        if (blockIndex = 2) { return 2; }
        return 2;
    }
    
    // L piece block X coordinate
    method int getLBlockX(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 2; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 1; }
            return 2;
        }
        if (rotation = 1) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 0; }
            if (blockIndex = 2) { return 0; }
            return 1;
        }
        if (rotation = 2) {
            if (blockIndex = 0) { return 0; }
            if (blockIndex = 1) { return 1; }
            if (blockIndex = 2) { return 2; }
            return 0;
        }
        // rotation = 3
        if (blockIndex = 0) { return 1; }
        if (blockIndex = 1) { return 2; }
        if (blockIndex = 2) { return 2; }
        return 2;
    }
    
    // L piece block Y coordinate
    method int getLBlockY(int blockIndex) {
        if (rotation = 0) {
            if (blockIndex = 0) { return 0; }
            return 1;
        }
        if (rotation = 1) {
            if (blockIndex = 3) { return 2; }
            return blockIndex;
        }
        if (rotation = 2) {
            if (blockIndex = 3) { return 1; }
            return 0;
        }
        // rotation = 3
        if (blockIndex = 0) { return 0; }
        return blockIndex - 1;
    }
    
    // Main block position return method (branching by piece type)
    method int getBlockX(int blockIndex) {
        if (pieceType = 0) { return getIBlockX(blockIndex); }
        if (pieceType = 1) { return getOBlockX(blockIndex); }
        if (pieceType = 2) { return getTBlockX(blockIndex); }
        if (pieceType = 3) { return getSBlockX(blockIndex); }
        if (pieceType = 4) { return getZBlockX(blockIndex); }
        if (pieceType = 5) { return getJBlockX(blockIndex); }
        if (pieceType = 6) { return getLBlockX(blockIndex); }
        return 0;
    }
    
    method int getBlockY(int blockIndex) {
        if (pieceType = 0) { return getIBlockY(blockIndex); }
        if (pieceType = 1) { return getOBlockY(blockIndex); }
        if (pieceType = 2) { return getTBlockY(blockIndex); }
        if (pieceType = 3) { return getSBlockY(blockIndex); }
        if (pieceType = 4) { return getZBlockY(blockIndex); }
        if (pieceType = 5) { return getJBlockY(blockIndex); }
        if (pieceType = 6) { return getLBlockY(blockIndex); }
        return 0;
    }
    
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}